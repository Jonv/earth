<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
	"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink" version="-//W3C//DTD XHTML 1.1//EN" xml:lang="en">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <%= stylesheet_link_tag 'base' %>
  <%= javascript_include_tag :defaults %>
  <title><%= if @directory then "#{@server.name}:#{@directory.path}/ - Earth"; elsif @server then "#{@server.name}: - Earth"; else "Earth"; end %></title>
</head>

<body>

<div id="Container">
  <div id="Banner">
    <!-- Holding Space for a Banner or a Logo -->
  </div>

  <div id="BreadcrumbAndFilter">
    <%= render_partial 'browser/breadcrumb_and_filter', nil, :can_show_empty => false %>
  </div>

  <div id="Top">
    <div id="LoginInformation">
      <!-- Place Holder for when we need Login Information -->
    </div>

    <div id="Tabs">
      <div id="TabsInside">
	      <% # We probably should get these from some configuration file or dynamically %>
        <% [
           { :title => "navigation", :controller => "browser", :action => "show", :mode => nil }, 
           { :title => "all files",  :controller => "browser", :action => "flat", :mode => nil }, 
           { :title => "treemap",    :controller => "graph",   :action => "index", :mode => "treemap"},
           { :title => "radial",    :controller => "graph",   :action => "index", :mode => "radial" } ].each_with_index { |item, index| 
        html_class = 'active' if controller.controller_class_name == (item[:controller].capitalize + "Controller") and params[:action] == item[:action] and params[:mode] == item[:mode]
              html_style = 'border-left: 1px solid #c2c2c2;' if index == 0 %>
          <%= link_to(item[:title], { :controller => item[:controller], :action => item[:action], :params => {:server => (@server ? @server.name : nil), :path => (@directory ? @directory.path : nil), :filter_user => params[:filter_user], :filter_filename => params[:filter_filename], :mode => item[:mode]} }, { :class => html_class, :style => html_style } ) %>
        <%  } %>
      </div>
    </div>
  </div>
  <div id="Content">
    <div id="ContentInside">
  		<%= yield  %>      
    </div>
  </div>
  <div id="Footer">
    Earth revision <%= ApplicationHelper.earth_version %>
  </div>

</div>
</body>
</html>
